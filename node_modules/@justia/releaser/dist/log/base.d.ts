import { InputOptions } from '@actions/core';
export declare type ILog = {
    /**
     * Gets the value of an input.  The value is also trimmed.
     */
    getInput(name: string, options?: InputOptions): string;
    /**
     * Sets the value of an output.
     */
    setOutput(name: string, value: unknown): void;
    /**
     * Sets the value of an output.
     */
    setOutput(name: string, value: unknown): void;
    /**
     * Sets the action status to failed.
     * When the action exits it will be with an exit code of 1
     */
    setFailed(message: string | Error): void;
    /**
     * Gets whether Actions Step Debug is on or not
     */
    isDebug(): boolean;
    /**
     * Writes debug message to user log
     */
    debug(message: string): void;
    /**
     * Adds an error issue
     */
    error(message: string | Error): void;
    /**
     * Adds an warning issue
     */
    warning(message: string | Error): void;
    /**
     * Writes info to log with console.log.
     */
    info(message: string): void;
    /**
     * Writes info to log with console.log.
     */
    log(message: string): void;
    /**
     * Begin an output group.
     *
     * Output until the next `groupEnd` will be foldable in this group
     */
    startGroup(name: string): void;
    /**
     * End an output group.
     */
    endGroup(): void;
    /**
     * Wrap an asynchronous function call in a group.
     *
     * Returns the same type as the function itself.
     */
    group<T>(name: string, fn: () => Promise<T>): Promise<T>;
};
