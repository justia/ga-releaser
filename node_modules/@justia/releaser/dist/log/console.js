"use strict";
const core_1 = require("@actions/core");
const SEPARATOR = '-'.repeat(process.stdout.columns);
class ConsoleLog {
    constructor() {
        this.console = console;
    }
    setOutput(name, value) {
        this.console.log(`Output: ${name}`, value);
    }
    /* eslint-disable class-methods-use-this */
    getInput(name, options) {
        return (0, core_1.getInput)(name, options);
    }
    isDebug() {
        return process.env.NODE_ENV !== 'production';
    }
    /* eslint-enable class-methods-use-this */
    debug(message) {
        this.console.debug(message);
    }
    setFailed(message) {
        this.error(message);
    }
    error(message) {
        const error = message instanceof Error ? message : Error(message);
        this.console.error(error);
        throw error;
    }
    warning(message) {
        this.console.warn(message);
    }
    info(message) {
        this.console.info(message);
    }
    log(message) {
        return this.info(message);
    }
    startGroup(name) {
        this.console.log(SEPARATOR);
        this.console.log(name);
    }
    endGroup() {
        this.console.log(SEPARATOR);
    }
    async group(name, fn) {
        let result;
        this.startGroup(name);
        try {
            result = await fn();
        }
        finally {
            this.endGroup();
        }
        return result;
    }
}
module.exports = ConsoleLog;
